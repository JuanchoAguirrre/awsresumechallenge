# This is a basic workflow to help you get started with Actions

name: master

# Controls when the workflow will run
on: push
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  
# on:
#   push:
#     branches:
#     - master

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # master-infra:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 2
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     - name: Setup Python
  #       uses: actions/setup-python@v2.3.1


  # build-and-deploy-infra:
  #   needs: master-infra
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #     - uses: aws-actions/setup-sam@v1
  #     - uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-secret-access-key: ${{ secrets. AWS_SECRET_ACCESS_KEY }}
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-region: us-east-1
  #     - run: sam build --use-container
  #       # working-directory: cloud-resume-challenge
  #     - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
  #       # working-directory: cloud-resume-challenge
  

  build-and-deploy-website:
    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     node-version: [12.x, 14.x, 16.x]

    defaults:
      run:
        working-directory: ./react-files-2
    
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v2
        with:
          node-version:  14.x
          cache: "npm"
          cache-dependency-path: ' **/package-lock.json'
      - run: |
             npm ci 
             npm run build --if-present 

      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
            AWS_S3_BUCKET: s3bucket.cloud-resume-challenge
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            SOURCE_DIR: build
      - run: npm run deploy

        

      